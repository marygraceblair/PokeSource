#!/usr/bin/env bash
# This script creates the sprite sheet from the icons folder
# Also generates the sprite CSS file.

readlink -f ./ >> /dev/null || exit 1

### EXT. OPTIONS
_NAME=${1:-'pokemon'} # used as base name of the generated files
_KLASS=${2:-'pk-m'} # Base class name for the CSS and SCSS output
_SORT=${3:0} # Sort icons by dimensions ? 0 or 1

if [ -z "$_SORT" ]; then
   _SORT=0
fi

### INTERNAL OPTIONS
__PATH__=`readlink -f ./`
_OUT_NAME=${_NAME} # base output file name
_TRIM=1 # Trim empty space of each icon and the final file?
_PADDING=1 # Padding between icons (will be x2)
_MAX_COLS=38 # Maximum icons per row

_ICONS_PATH="${__PATH__}/graphics/${_NAME}"
_ICONS_TMP_PATH="${__PATH__}/graphics/${_NAME}_tmp"

_ICONS_FILE="${__PATH__}/dist/img/${_NAME}.png"
_SASS_FILE="${__PATH__}/sass/modules/sprites/${_NAME}.scss"
_HTML_FILE="${__PATH__}/html/${_NAME}.html"

# Cleanup previous files
echo "Cleaning up previous tmp and generated files and folders..."
rm -rf ${_ICONS_TMP_PATH}
rm -rf ${_SASS_FILE} ${_HTML_FILE} ${_ICONS_FILE}

# Create a temporary directory to not mess up with original one
cp -Rp ${_ICONS_PATH} ${_ICONS_TMP_PATH}
cd ${_ICONS_TMP_PATH}

if [ ${_TRIM} -eq 1 ]
then
	echo "Removing surrounding empty space from each image..."
	mogrify -trim *.png
fi

if [ ${_SORT} -eq 1 ]
then
	echo "Sorting images by size..."
    # Sort / rename images by size and height (like 1200-30__ )
    for a in *.png; do
        mv $a `identify -format "%[fx:w*h]-%hpx__%[base].png" ${a}`
    done

    # Add leading zeros if needed to the filename (all will end up having 4 digits)
    for a in [0-9][0-9][0-9][-]*.png; do
        mv $a 0${a}
    done
#    for a in *.png; do
#        echo $a
#        echo $a | sed -r 's/^.*px__(.*)/\1/'
#    done
fi

# Generate CSS and files list
echo "Generating SASS and sample HTML..."

MONTAGE_FILES="" # List of files
X=0 # sprite tile x position
Y=0 # sprite tile y position
W=0 # individual image width
H=0 # individual image height

if [ ${_TRIM} -eq 1 ]
then
    X_POS=0
    Y_POS=0
else
    X_POS=$((-1 * $_PADDING))
    Y_POS=$((-1 * $_PADDING))
fi

HIGHEST=0
WIDEST_ALL=0
HIGHEST_ALL=0

scss=""
html="<div class='box ${_KLASS}-list'><h2>${_NAME^}</h2> <h3>Variable size</h3>"
html2="<div class='box ${_KLASS}w-list'> <h3>Fixed size</h3>"
html3="<div class='box ${_KLASS}-combi-list'> <h3>Combined with wrapper</h3>"

for img in *.png; do
    ALIAS=`basename $img .png`
    ALIAS=${ALIAS/*px__/} # removes sorting prefix (like 1200-30___ )
    W=`identify -format "%w" ${img}`
    H=`identify -format "%h" ${img}`

    scss="$scss\n
.${_KLASS}-${ALIAS}, .${_KLASS}w-${ALIAS}:after{\n
    @include sprite(${W}px, ${H}px, ${X_POS}px, ${Y_POS}px);\n
}\n"

    html="$html \n<i class=\"${_KLASS} ${_KLASS}-${ALIAS}\" title=\"${_KLASS} ${_KLASS}-${ALIAS}\"></i>\n"
    html2="$html2 \n<i class=\"${_KLASS}w ${_KLASS}w-${ALIAS}\" title=\"${_KLASS}w ${_KLASS}w-${ALIAS}\"></i>\n"
    html3="$html3 \n<span title=\"${_KLASS}-wrapper\" class=\"${_KLASS}-wrapper\"><i class=\"${_KLASS} ${_KLASS}-${ALIAS}\"
    title=\"${_KLASS} ${_KLASS}-${ALIAS}\"></i></span>\n"

    MONTAGE_FILES="$MONTAGE_FILES $img"
    X=$(($X + 1))
    X_POS=$(($X_POS - $(($W + $(($_PADDING * 2)) )) ))

    if [ ${W} -gt ${WIDEST_ALL} ]
    then
        WIDEST_ALL=${W}
    fi
    if [ ${H} -gt ${HIGHEST_ALL} ]
    then
        HIGHEST_ALL=${H}
    fi
    if [ ${H} -gt ${HIGHEST} ]
    then
        HIGHEST=${H}
    fi

    if [ ${X} -eq ${_MAX_COLS} ]
    then
        X=0
        if [ ${_TRIM} -eq 1 ]
        then
            X_POS=0
        else
            X_POS=$((-1 * $_PADDING))
        fi
        Y_POS=$(($Y_POS - $(($HIGHEST + $(($_PADDING * 2)) )) ))
        Y=$(($Y + 1))
        HIGHEST=0
    fi
done

cd ${__PATH__}
shopt -s xpg_echo # make echo follow the common spec regarding special chars
echo -e $scss | iconv --to-code=utf-8 --output=${_SASS_FILE}
# echo -e "$html</div>$html2</div>$html3</div>" | iconv --to-code=utf-8 --output=${_HTML_FILE}